{"ast":null,"code":"var _jsxFileName = \"/home/duc/coding/duc-nguyen-speech-to-text/client/src/recordpage/RecorderSection.jsx\",\n    _s = $RefreshSig$();\n\nimport { Recorder } from 'react-voice-recorder';\nimport 'react-voice-recorder/dist/index.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecorderSection(props) {\n  _s();\n\n  const [audio, setAudio] = useState({\n    audioURL: null,\n    audioDetails: {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    }\n  });\n\n  function handleAudioStop(data) {\n    console.log(data);\n    setAudio({ ...audio,\n      audioDetails: data\n    });\n  }\n\n  function handleRest() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    setAudio({ ...audio,\n      audioDetails: reset\n    });\n  }\n\n  function handleAudioUpload(file) {\n    console.log(file);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Recorder\",\n    children: /*#__PURE__*/_jsxDEV(Recorder, {\n      record: true,\n      title: \"New recording\",\n      audioURL: audio.audioURL,\n      showUIAudio: true,\n      handleAudioStop: data => handleAudioStop(data),\n      handleAudioUpload: data => handleAudioUpload(data),\n      handleRest: () => handleRest()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n\n_s(RecorderSection, \"jkm+ecfuoyXMj9y2TGbHQX1czZw=\");\n\n_c = RecorderSection;\nexport default RecorderSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecorderSection\");","map":{"version":3,"sources":["/home/duc/coding/duc-nguyen-speech-to-text/client/src/recordpage/RecorderSection.jsx"],"names":["Recorder","useState","RecorderSection","props","audio","setAudio","audioURL","audioDetails","url","blob","chunks","duration","h","m","s","handleAudioStop","data","console","log","handleRest","reset","handleAudioUpload","file"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,sBAAvB;AACA,OAAO,qCAAP;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAKA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAE/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAC/BK,IAAAA,QAAQ,EAAE,IADqB;AAE/BC,IAAAA,YAAY,EAAE;AACZC,MAAAA,GAAG,EAAE,IADO;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,MAAM,EAAE,IAHI;AAIZC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,CAAC,EAAE,CADK;AAERC,QAAAA,CAAC,EAAE,CAFK;AAGRC,QAAAA,CAAC,EAAE;AAHK;AAJE;AAFiB,GAAD,CAAlC;;AAaA,WAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAX,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,MAAAA,YAAY,EAACS;AAFR,KAAD,CAAR;AAIH;;AACD,WAASG,UAAT,GAAsB;AAClB,UAAMC,KAAK,GAAG;AACZZ,MAAAA,GAAG,EAAE,IADO;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,MAAM,EAAE,IAHI;AAIZC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,CAAC,EAAE,CADK;AAERC,QAAAA,CAAC,EAAE,CAFK;AAGRC,QAAAA,CAAC,EAAE;AAHK;AAJE,KAAd;AAUAT,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,MAAAA,YAAY,EAACa;AAFR,KAAD,CAAR;AAIH;;AACD,WAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC7BL,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACH;;AACG,sBACQ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,MAAM,EAAE,IADV;AAEE,MAAA,KAAK,EAAE,eAFT;AAGE,MAAA,QAAQ,EAAElB,KAAK,CAACE,QAHlB;AAIE,MAAA,WAAW,MAJb;AAKE,MAAA,eAAe,EAAGU,IAAD,IAAUD,eAAe,CAACC,IAAD,CAL5C;AAME,MAAA,iBAAiB,EAAGA,IAAD,IAAUK,iBAAiB,CAACL,IAAD,CANhD;AAOE,MAAA,UAAU,EAAE,MAAMG,UAAU;AAP9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADR;AAaK;;GAtDAjB,e;;KAAAA,e;AA0DT,eAAeA,eAAf","sourcesContent":["import {Recorder} from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\nimport {useState} from \"react\";\n\n\n\n\nfunction RecorderSection(props){\n    \nconst [audio, setAudio] = useState({\n    audioURL: null,\n    audioDetails: {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    }});\n\nfunction handleAudioStop(data) {\n    console.log(data);\n    setAudio({\n        ...audio,\n        audioDetails:data\n    });\n}\nfunction handleRest() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    setAudio({\n        ...audio,\n        audioDetails:reset\n    });\n}\nfunction handleAudioUpload(file) {\n    console.log(file);\n}\n    return (\n            <div className=\"Recorder\">\n              <Recorder\n                record={true}\n                title={\"New recording\"}\n                audioURL={audio.audioURL}\n                showUIAudio\n                handleAudioStop={(data) => handleAudioStop(data)}\n                handleAudioUpload={(data) => handleAudioUpload(data)}\n                handleRest={() => handleRest()}\n              />\n            </div>\n          );\n        }\n    \n    \n\nexport default RecorderSection;\n"]},"metadata":{},"sourceType":"module"}